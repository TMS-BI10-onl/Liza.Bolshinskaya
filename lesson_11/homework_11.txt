CREATE TABLE data_for_merge_2
(
Function_name NVARCHAR (17),
Function_count INT
)

MERGE data_for_merge_2 target
USING data_for_merge source ON target.Function_name=source.a
WHEN NOT MATCHED BY TARGET AND source.a IS NOT NULL
THEN INSERT (Function_name, Function_count)
VALUES(a, 1);

MERGE data_for_merge_2 target
USING data_for_merge source ON target.Function_name=source.b
WHEN MATCHED 
THEN UPDATE SET target.Function_count=target.Function_count+1
WHEN NOT MATCHED BY TARGET AND source.b IS NOT NULL
THEN INSERT (Function_name, Function_count)
VALUES(b, 1);

MERGE data_for_merge_2 target
USING data_for_merge source ON target.Function_name=source.c
WHEN MATCHED 
THEN UPDATE SET target.Function_count=target.Function_count+1
WHEN NOT MATCHED BY TARGET AND source.c IS NOT NULL
THEN INSERT (Function_name, Function_count)
VALUES(c, 1);

MERGE data_for_merge_2 target
USING data_for_merge source ON target.Function_name=source.d
WHEN MATCHED 
THEN UPDATE SET target.Function_count=target.Function_count+1
WHEN NOT MATCHED BY TARGET AND source.d IS NOT NULL
THEN INSERT (Function_name, Function_count)
VALUES(d, 1);

MERGE data_for_merge_2 target
USING data_for_merge source ON target.Function_name=source.e
WHEN MATCHED 
THEN UPDATE SET target.Function_count=target.Function_count+1
WHEN NOT MATCHED BY TARGET AND source.e IS NOT NULL
THEN INSERT (Function_name, Function_count)
VALUES(e, 1);

MERGE data_for_merge_2 target
USING data_for_merge source ON target.Function_name=source.f
WHEN MATCHED 
THEN UPDATE SET target.Function_count=target.Function_count+1
WHEN NOT MATCHED BY TARGET AND source.f IS NOT NULL
THEN INSERT (Function_name, Function_count)
VALUES(f, 1);

MERGE data_for_merge_2 target
USING data_for_merge source ON target.Function_name=source.g
WHEN MATCHED 
THEN UPDATE SET target.Function_count=target.Function_count+1
WHEN NOT MATCHED BY TARGET AND source.g IS NOT NULL
THEN INSERT (Function_name, Function_count)
VALUES(g, 1);

MERGE data_for_merge_2 target
USING data_for_merge source ON target.Function_name=source.h
WHEN MATCHED 
THEN UPDATE SET target.Function_count=target.Function_count+1
WHEN NOT MATCHED BY TARGET AND source.h IS NOT NULL
THEN INSERT (Function_name, Function_count)
VALUES(h, 1);

MERGE data_for_merge_2 target
USING data_for_merge source ON target.Function_name=source.i
WHEN MATCHED 
THEN UPDATE SET target.Function_count=target.Function_count+1
WHEN NOT MATCHED BY TARGET AND source.i IS NOT NULL
THEN INSERT (Function_name, Function_count)
VALUES(i, 1);

SELECT * FROM data_for_merge_2